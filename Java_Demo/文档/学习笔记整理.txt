1.静态变量以及静态函数，静态变量和静态方法都建议直接用类名直接调用
但是在你引入静态包的时候  可以直接使用一些静态函数 无须用类名调用
2.静态方法是属于全局的 因此不需要构造实力对象对其调用即便可以，所以静态
方法是没有this指针的，也因此静态方法不能是final型的 以及 抽象函数！
3.当用子类给父类赋值的时候 只是将子类中继承父类的那些属性给父类赋值，并没有把
子类中新定义的属性给父类。




通配符
<?,?>
在定义一个数据类型的时候，可以把已有的一个数据类型，定义为该类数据类型里面的常量数据类型
比如
我们先定义一个class Studengt{
int age;char sex; String number; double high;
public void show(){}
public void set(){}

class <>
}





小知识：

1.关于do{}while(++i<M)有待检查第一次先执行  再执行while（）   其中  while(i++<M){} 等价于 while(++i<=M){} 若是i=0;循环体里面的
语句都会执行M次。
其实对于将自增自减放于 循环体里面的do{}while() 和while{}效果是一样的，对于自增自减放于while的条件判定中有一定的变数
当然对于while语句而言用while(i++ <m )和将i++放于循环体内第一位等价，若是没有什么特殊情况是一样的，但是若是while（++i < m）循环就会
少执行一次 自增自减直接在条件判断时候就运行了。若是要和while（i++<m）等价  就需要加一个=号。  至于用while（++i）还是while(条件){++i}
就要看具体情况了，当然--是一样的。
===》归结一个统一的用法  就是若是要用i的初值  就先用一个s将i的初值给保存了，然后用while（i++<m）或者while（++i<=m）这样程序可以简洁


2.for循环 可以用while循环替代，if语句可以用三目运算符替代，大多数循环都能用递归函数加一些判断语句替换

3.&  &&  都可以进行逻辑与运算，当两边是数字时候  &进行位；&&可以作为终端信号 若是&&前面是false后面的语句就不会执行了！

4.if  for之类的语句  若是没有打大括号 程序运行时则只会运行紧跟之后的语句

5 程序设计模式 穷举 递推 分治 贪心.........

6 内置api函数
